[
 {lager, [
   {log_root, "log/"},
   {colored, true},
   {colors, [
        {debug,     "\e[0;33m" },
        {info,      "\e[0;32m" },
        {notice,    "\e[1;32m" },
        {warning,   "\e[0;35m" },
        {error,     "\e[1;31m" },
        {critical,  "\e[1;31m" },
        {alert,     "\e[1;31m" },
        {emergency, "\e[1;31m" }
   ]},
   {handlers, [
     {lager_console_backend, info},
     {lager_file_backend, [{file, "error.log"}, {level, error}]},
     {lager_file_backend, [{file, "console.log"}, {level, info}]}
   ]},
   {extra_sinks, [
     {req_logs_lager_event, [
         {handlers, [
             {lager_console_backend, [
                 info,
                 {lager_default_formatter, [time, color, " [",severity,"] ", message, "\e[0m\r\n"]}
             ]},
             {lager_file_backend, [{file, "req.log"}, {level, info}]}
         ]}
     ]}
   ]}
 ]},
 {beamparticle, [
   {port, 8282},        %% HTTP port to listen to
   {api_keys, [
     {openweathermap, <<"9038c4e5ca179adf5fc45cda9d405980">>}
   ]},

   {cluster, [
       %% {peers, ['beamparticle@127.0.0.2', 'beamparticle@127.0.0.3']}
   ]},

   %% Default username and password for websocket and https which
   %% is used only till no user in that category (websocket or
   %% http_rest) is created. Once even a single user is created
   %% then this default shall not be used.
   %%
   %% TODO CHANGEME
   {auth, [
       {default_user, <<"root">>},
       {default_password, <<"root">>}
   ]},

   {http_rest, [
	   {nr_listeners, 1000},
	   {backlog, 1024},
	   {max_connections, 50000},

	   %% the maximum number of requests which will be serviced
	   %% with the same process (by cowboy) when http client
	   %% implements HTTP/1.1 keep-alive
	   {max_keepalive, 100},

	   {max_read_length, 12582912},  %% 12 * 1024 * 1024 or 12 MB
	   {max_read_timeout_msec, 10000}
   ]},

   {smtp, [
       {enable, false},
       {domain, "example.com"},
       {dkim_selector, <<"dkimselector">>},
       {mail_root, "mail"}
   ]},

   {snapshot, [
       %% root folder relative to cwd where knowledge is exported
       %% when snapshots are created.
       {knowledge_root, "knowledge"}
   ]},

   {smtp_client, [
       {from_email, <<"Sender <sender@example.com>">>},
       {relay, <<"smtp.gmail.com">>},
       {username, <<"sender@example.com">>},
       {password, <<"password">>}
   ]},


   {erlcloud, [
        {aws_access_key_id, "your key"},
        {aws_secret_access_key, "your secret key"},
        {aws_security_token, "your token"},
        {aws_region, "your region"}
   ]},

   {caches, [
       {beamparticle_cache, [
           {enable, true},
           {memory_bytes, 67108864}, %% 64*1024*1024
           {segments, 20},
           {ttl_sec, 86400} %% 24*60*60
       ]},
       {data_cache, [
           {enable, true},
           {memory_bytes, 67108864}, %% 64*1024*1024
           {segments, 20},
           {ttl_sec, 86400} %% 24*60*60
       ]}
    ]},

   {palma_pools, [
	   {
		   beamparticle_k_model_pool,
		   8,
		   {
			   beamparticle_k_model_worker_id,
			   {
				   leveldbstore_proc,
				   start_link,
				   [   
					   dbowner,
					   beamparticle_k_model  %% match name in leveldb_config
				   ]
			   },
			   {permanent, 5},
			   1000,
			   worker,
			   [leveldbstore_proc]
		   },
		   10000,
		   #{min_alive_ratio => 1.0, reconnect_delay => 5000}
	   }
   ]},
   {leveldb_config, [
	   {beamparticle_k_model, [
		   {prefix, <<>>},  %% match all
		   {dbpath, "/opt/beamparticle-data/leveldb-k-data"},
		   {dboptions, [{compression, lz4}
			   ,{write_buffer_size, 167772160}  %% 160*1024*1024
			   ,{use_bloomfilter, true}
		   ]},
		   {timeout_msec, 600000},
		   {pool, beamparticle_k_model_pool}  %% match with palma_pools
	   ]}
   ]}
 ]}
].
