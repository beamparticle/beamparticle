%% 
%% %CopyrightBegin%
%%
%% Copyright Neeraj Sharma <neeraj.sharma@alumni.iitg.ernet.in> 2017.
%% All Rights Reserved.
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%%     http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.
%%
%% %CopyrightEnd%
%%
{require_min_otp_vsn, "20.0"}.

{erl_opts, [debug_info, warn_unused_vars, warn_shadow_vars, warn_unused_import,
            warnings_as_errors, {parse_transform, lager_transform},
            {lager_extra_sinks, [req_logs]}]}.

{deps, [
        {'lager', {
           git, "git://github.com/basho/lager.git", "master"}},
        {'cowboy', {
           git, "git://github.com/ninenines/cowboy.git", {tag, "master"}}},

        %% use jiffy as well
        {jiffy, {git, "https://github.com/davisp/jiffy.git", {tag, "0.14.13"}}},

        {'jsx', {
           git, "https://github.com/talentdeficit/jsx.git", {tag, "v2.8.0"}}},

        %% debug tools
        recon,

        %% metrics
        {folsom_cowboy, {git, "https://github.com/boundary/folsom_cowboy.git", {branch, "master"}}},

        %% LevelDB
        {eleveldb, {git, "https://github.com/basho/eleveldb", {branch, "develop"}}},

        %% dynamic gen_server pool
        {palma, {git, "https://github.com/neeraj9/palma", {branch, "fix-duplicate-supervisor2"}}},

        %% a data driven data structure manipulation library for erlang.
        %% Conveniently manipulate Erlang maps
        {dotto, {
           git, "https://github.com/marianoguerra/dotto", {branch, "master"}}},

        %% erlcron
        {erlcron, {
           git, "https://github.com/neeraj9/erlcron", {branch, "dev-lib"}}},

        %% sortable erlang term serialization
        {sext, {
           git, "https://github.com/uwiger/sext", {branch, "master"}}},

        %% In-Memory Cache
        {cache, {git, "https://github.com/fogfish/cache", {branch, "master"}}},

        %% lhttpc (required by erlcloud) patched for Erlang-20
        {lhttpc, {git, "https://github.com/neeraj9/lhttpc", {branch, "dev-erl20"}}},

        %% AWS APIs
        {erlcloud, {git, "https://github.com/erlcloud/erlcloud", {branch, "master"}}},

        %% mysql client
        {mysql, {git, "https://github.com/mysql-otp/mysql-otp.git", {branch, "master"}}},
        {nested, {git, "https://github.com/odo/nested.git", {branch, "master"}}},
        % a data driven data structure manipulation library for erlang.
        % Conveniently manipulate Erlang maps
        {dotto, {git, "https://github.com/marianoguerra/dotto", {branch, "master"}}},
        %% scalable, deadlock-resolving resource locker for multi-node cluster
        %% coordination
        {locks, {git, "https://github.com/uwiger/locks", {branch, "master"}}},
        %% postgresql client
        {epgsql, {git, "https://github.com/epgsql/epgsql.git", {tag, "3.2.0"}}},
        %% Secure password hashing
        %% https://en.wikipedia.org/wiki/PBKDF2
        {pbkdf2, {git, "https://github.com/basho/erlang-pbkdf2.git", {tag, "2.0.0"}}},
        %% redis client
        {eredis, {git, "https://github.com/wooga/eredis.git", {branch, "master"}}},
        %% Json Web Token (for authentication)
        {jwt, {git, "https://github.com/neeraj9/jwt.git", {branch, "master"}}},
        %% datetime formatter and timezone util
        {qdate, {git, "https://github.com/choptastic/qdate.git", {branch, "master"}}},

        %% eiconv is required by gen_smtp
        {eiconv, {git, "https://github.com/zotonic/eiconv", {branch, "master"}}},
        {gen_smtp, {git, "https://github.com/Vagabond/gen_smtp", {branch, "master"}}},
        {mongodb, {git, "https://github.com/comtihon/mongodb-erlang", {branch, "master"}}},

        %% rabbitmq
        {amqp_client, {git, "git://github.com/jbrisbin/amqp_client.git", {tag, "rabbitmq-3.6.2"}}},

        {erlsom, {git, "https://github.com/willemdj/erlsom", {branch, "master"}}},
        {soap, {git, "https://github.com/neeraj9/soap", {branch, "dev-map-with-binary-keys"}}},

        %% cassandra client
        {cqerl, {git, "https://github.com/matehat/cqerl", {branch, "master"}}},
        %% very fast cassandra client
        {marina, {git, "https://github.com/neeraj9/marina", {branch, "dev-auth"}}},

        %% latch on to opentracing
        {otter, {git, "https://github.com/Bluehouse-Technology/otter", {branch, "master"}}},

        %% plot 2d graphs
        %%{eplot, {git, "https://github.com/psyeugenic/eplot", {branch, "master"}}},

        %% nanomsg in erlang (uses erlang port driver)
        %% http://erlang.org/doc/tutorial/c_portdriver.html
        {enm, {git, "https://github.com/basho/enm", {branch, "master"}}},

        %% alarm manager (more functionality than Erlang alarm manager).
        {elarm, {git, "https://github.com/esl/elarm", {branch, "master"}}},

        %% efene - alternative syntax for Erlang
        {efene, {git, "https://github.com/efene/efene", {branch, "master"}}},

        %% elixir - dynamic, functional language
        {elixir, {raw, {git, "https://github.com/elixir-lang/elixir", {branch, "master"}}, []}},

        %% ePHP - PHP interpreter in pure Erlang
        {ezic, {git, "https://github.com/neeraj9/ezic", {branch, "dev-fix-app-description"}}},
        {ephp, {git, "https://github.com/bragful/ephp", {branch, "master"}}},

        %% simple diff library
        {tdiff, {git, "https://github.com/tomas-abrahamsson/tdiff", {branch, "master"}}},

        %% meta programming just got easier
        {forms, {git, "https://github.com/efcasado/forms", {branch, "master"}}},
        {meta, {git, "https://github.com/efcasado/meta", {branch, "master"}}},

        {erlexec, {git, "https://github.com/saleyn/erlexec", {branch, "master"}}}

        %% sandbox for Erlang (TODO)
        %% {alcove, {git, "https://github.com/msantos/alcove", {branch, "master"}}},
        %% {prx, {git, "https://github.com/msantos/prx", {branch, "master"}}}

       ]}.

{edoc_opts, [
             {new, true},
             {source_path, ["src/", "include/", "models/", "handlers/", "backends/"]}
            ]}.

{profiles, [
            {prod, [
                    [{relx, [
                             {dev_mode, false},
                             {include_src, false},
                             {include_erts, true}
                            ]}]
                   ]},

            {test, [
                    {deps, [proper, meck]}
                   ]}
           ]}.

{alias, [
         {check, [xrref, dialyzer, {proper, "-c"}, {cover, "-v"}]}
        ]}.


%% NOTE: use "make pynode" manually instead if python node
%%       is required. Dont forget to do "git submodule init" and
%%       "git submodule update" in support/pynode folder
%%
%% build support nodes
%%{pre_hooks, [
%%             {compile, "build_pynode.sh"},
%%             {compile, "build_support_nodes.sh"}
%%            ]}.

%% property based testing
{proper_opts, [{numtests, 100}]}.

{relx, [
        {release, {beamparticle, "0.1.3"},
         [beamparticle]},

        %% _build/rel/myrel/lib are symlinks to _build/lib
        {dev_mode, true},
        %% Do not include Erlang runtime system and use system default
        {include_erts, false},
        %% provides a few more ways of starting and connecting to your release
        {extended_start_script, true},

        {sys_config, "config/sys.config"},
        {vm_args, "config/vm.args"}
       ]}.

{plugins, [
           rebar_alias,
           rebar3_proper,
           {rebar_raw_resource,
                    {git, "git://github.com/basho/rebar_raw_resource.git",
                             {branch, "master"}}}
           %%{ rebar3_elixir_compile, ".*", {git, "https://github.com/barrel-db/rebar3_elixir_compile.git", {branch, "master"}}}
          ]}.


{xref_checks, [
               undefined_function_calls,undefined_functions,locals_not_used,
               exports_not_used,deprecated_function_calls, deprecated_functions
              ]}.

%% Paths for structure
{src_dirs, ["include", "src", "models", "handlers", "backends"]}.


%% -*- mode: erlang;erlang-indent-level: 2;indent-tabs-mode: nil -*-
%% ex: ts=2 sw=2 ft=erlang et
